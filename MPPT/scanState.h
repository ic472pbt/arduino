#ifndef SCANSTATE_H
#define SCANSTATE_H
#define SCAN_STEP 90  
#include "IState.h"
class Charger;  // Forward declaration of Charger

// scanState - This is the charger state used for scanning solar power levels to find the optimal duty cycle.
//      When solar watts are above MIN_SOL_WATTS, the charger enters this state to maximize the charging efficiency
//      by finding the peak power point. In this state, the charger tests different duty cycles and tracks
//      the power generated by the solar panels, aiming to identify the best duty cycle that results in maximum power.
//      Once the best power point is identified, the charger switches to the bulk charging state.
class scanState : public IState {
  private:
    byte cycleNum = 0;
    unsigned long bestPower = 0;
    unsigned int bestDuty = 0; 

  public:
    scanState() : IState("scan"), cycleNum(0), bestPower(0), bestDuty(0) {}
        
    IState* Handle(Charger& charger, SensorsData& sensor, unsigned long currentTime) override;

    bool isFloat() override {return false;}
    bool isBulk() override {return false;}
    bool isOff() override {return false;}
};
#endif
